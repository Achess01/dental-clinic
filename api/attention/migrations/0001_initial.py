# Generated by Django 4.1 on 2022-08-15 17:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Diagnostic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=150, verbose_name='option name')),
                ('description', models.CharField(max_length=255, verbose_name='option name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('rut', models.CharField(error_messages={'unique': 'Patient rut must be unique'}, max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Rut must be atleast 9 characters and up to 13 characters.', regex='\\w{9,13}$')])),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('birthday', models.DateField(verbose_name='patient birthday')),
                ('age', models.PositiveSmallIntegerField(verbose_name='patient age')),
                ('ocuppation', models.CharField(help_text='What is the ocuppation of the patient', max_length=255, verbose_name='patient occupation')),
                ('address', models.CharField(max_length=255, verbose_name='patient address')),
                ('medical_history', models.CharField(blank=True, help_text='It describes what some important medical history of the patient', max_length=255, verbose_name='patient medical history')),
                ('is_active', models.BooleanField(default=True, help_text='Wheter is active patient or was deleted (active=False)')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('diagnostic_date', models.DateTimeField(null=True, verbose_name='diagnostic datetime')),
                ('attention_type', models.CharField(blank=True, choices=[('U', 'URGENT'), ('T', 'TREATMENT')], max_length=1, verbose_name='attention type')),
                ('treated_piece', models.CharField(blank=True, max_length=255, verbose_name='treated piece')),
                ('actual_appointment_date', models.DateTimeField(null=True, verbose_name='appointment datetime')),
                ('indications', models.CharField(blank=True, help_text='specialist indications', max_length=255)),
                ('notes', models.CharField(blank=True, help_text='specialist notes', max_length=255)),
                ('attendance_state', models.CharField(blank=True, choices=[('A', 'ATTENDED'), ('N', 'NO ATTENDED'), ('L', 'LATE')], max_length=1)),
                ('vouche_state', models.CharField(blank=True, choices=[('PAID', 'PAID'), ('PENDING', 'PENDING')], max_length=10)),
                ('surface', models.CharField(blank=True, choices=[('M', 'M'), ('O', 'O'), ('D', 'D')], max_length=1)),
                ('diagnostic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='attention.diagnostic')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attention.patient')),
                ('specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.specialist')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=150, verbose_name='option name')),
                ('description', models.CharField(max_length=255, verbose_name='option name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TreatmentPerformed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=150, verbose_name='option name')),
                ('description', models.CharField(max_length=255, verbose_name='option name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LateRecord',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='attention.record')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
            bases=('attention.record',),
        ),
        migrations.CreateModel(
            name='NoAttendedRecord',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='attention.record')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
            bases=('attention.record',),
        ),
        migrations.AddField(
            model_name='record',
            name='treatment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='attention.treatment'),
        ),
        migrations.AddField(
            model_name='record',
            name='tretment_performed',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='attention.treatmentperformed'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('date', models.DateTimeField(verbose_name='appointment day and time')),
                ('patient', models.ForeignKey(help_text='Patient who is asking for an appointment', on_delete=django.db.models.deletion.CASCADE, to='attention.patient')),
                ('secretary', models.ForeignKey(help_text='Secretary who is setting the appointment', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.secretary')),
                ('specialist', models.ForeignKey(help_text='Specialist who attends the patient', on_delete=django.db.models.deletion.CASCADE, to='users.specialist')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
